{"version":3,"file":"SeoField.min.js","sources":["../../../resources/js/field/Tabs.js","../../../resources/js/_helpers/createElement.js","../../../resources/js/_helpers/TextStatistics.js","../../../resources/js/_helpers/fail.js","../../../resources/js/_helpers/debounce.js","../../../resources/js/_helpers/capitalize.js","../../../resources/js/_helpers/isExternalUrl.js","../../../resources/js/_helpers/countInArray.js","../../../resources/js/_helpers/createRating.js","../../../resources/js/field/EntryMarkup.js","../../../resources/js/const.js","../../../resources/js/field/KeywordChecklist.js","../../../resources/js/field/FocusKeywords.js","../../../resources/js/field/Snippet.js","../../../resources/js/field/Social.js","../../../resources/js/SeoField.js"],"sourcesContent":["/**\n * SEO Tabs\n *\n * @author    Tam McDonald\n * @copyright Ether Creative 2017\n * @link      https://ethercreative.co.uk\n * @package   SEO\n * @since     1.5.0\n */\nexport default class Tabs {\n\t\n\t// Variables\n\t// =========================================================================\n\t\n\tactiveTab = { tab: null, page: null };\n\tpages = {};\n\t\n\t// Tabs\n\t// =========================================================================\n\t\n\tconstructor (namespace) {\n\t\tthis.namespace = namespace;\n\t\t\n\t\t// Variables\n\t\tconst tabs = [].slice.call(\n\t\t\tdocument.getElementById(this.namespace + 'Tabs')\n\t\t\t        .getElementsByTagName('a')\n\t\t);\n\t\t\n\t\tthis.pages = [].slice.call(\n\t\t\tdocument.getElementById(this.namespace + 'Pages').children\n\t\t).reduce((a, b) => {\n\t\t\ta[b.dataset.seoTab] = b;\n\t\t\treturn a;\n\t\t}, {});\n\t\t\n\t\t// Set default active\n\t\tthis.setActiveTab(tabs[0]);\n\t\t\n\t\t// Events\n\t\ttabs.forEach(tab => {\n\t\t\ttab.addEventListener('click', e => {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.setActiveTab(tab);\n\t\t\t});\n\t\t});\n\t}\n\t\n\t// Misc\n\t// =========================================================================\n\t\n\tsetActiveTab (tab) {\n\t\tconst name = tab.dataset.seoTab;\n\t\t\n\t\tif (this.activeTab.tab) {\n\t\t\tthis.activeTab.tab.classList.remove('active');\n\t\t\tthis.activeTab.page.classList.remove('active');\n\t\t}\n\t\t\n\t\tthis.activeTab = {\n\t\t\ttab,\n\t\t\tpage: this.pages[name],\n\t\t};\n\t\t\n\t\tthis.activeTab.tab.classList.add('active');\n\t\tthis.activeTab.page.classList.add('active');\n\t}\n\t\n}\n","/**\n * ## Create Element\n * Quick and easy DOM element creation\n *\n * @param {string=} tag - The element tag\n * @param {object=} attributes - The attributes to add, mapping the key as\n *     the attribute name, and the value as its value. If the value is a\n *     function, it will be added as an event.\n * @param {(Array|*)=} children - An array of children (can be a mixture of\n *     Nodes to append, or other values to be stringified and appended\n *     as text).\n * @return {Element} - The created element\n */\nexport default function createElement (\n\ttag = 'div',\n\tattributes = {},\n\tchildren = []\n) {\n\tconst elem = document.createElement(tag);\n\t\n\tfor (let [key, value] of Object.entries(attributes)) {\n\t\tif (!value) continue;\n\t\t\n\t\tif (typeof value === typeof (() => {})) {\n\t\t\tif (key === 'ref') value(elem);\n\t\t\telse elem.addEventListener(key, value);\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tif (key === 'style')\n\t\t\tvalue = value.replace(/(?:\\r\\n|\\r|\\n|\\t|\\s+)/g, ' ').trim();\n\t\t\n\t\telem.setAttribute(key, value);\n\t}\n\t\n\tif (!Array.isArray(children))\n\t\tchildren = [children];\n\t\n\tchildren.map(child => {\n\t\tif (!child) return;\n\t\t\n\t\ttry {\n\t\t\telem.appendChild(child);\n\t\t} catch (_) {\n\t\t\telem.appendChild(document.createTextNode(child));\n\t\t}\n\t});\n\t\n\treturn elem;\n}","/**\n * TextStatistics.js\n * Christopher Giffard (2012)\n * 1:1 API Fork of TextStatistics.php by Dave Child (Thanks mate!)\n * https://github.com/DaveChild/Text-Statistics\n *\n * Modified & re-written for ES6 by Tam<hi@tam.sx>\n */\n\nexport default class TextStatistics {\n\t\n\tconstructor (text) {\n\t\tthis.text = text ? TextStatistics.cleanText(text) : text;\n\t}\n\t\n\t// Statistics\n\t// =========================================================================\n\t\n\t/**\n\t * Calculates the Flesch Kincaid reading ease score\n\t *\n\t * @return {number}\n\t */\n\tfleschKincaidReadingEase () {\n\t\treturn Math.round(\n\t\t\t(\n\t\t\t\t206.835\n\t\t\t\t- (1.015 * this.averageWordsPerSentence())\n\t\t\t\t- (84.6 * this.averageSyllablesPerWord())\n\t\t\t) * 10\n\t\t) / 10;\n\t}\n\t\n\t/**\n\t * Calculates the Flesch Kincaid grade level\n\t *\n\t * @return {number}\n\t */\n\tfleschKincaidGradeLevel () {\n\t\treturn Math.round(\n\t\t\t(\n\t\t\t\t(0.39 * this.averageWordsPerSentence())\n\t\t\t\t+ (11.8 * this.averageSyllablesPerWord())\n\t\t\t\t- 15.59\n\t\t\t) * 10\n\t\t) / 10;\n\t}\n\t\n\t/**\n\t * Calculates the Gunning Fog score\n\t *\n\t * @return {number}\n\t */\n\tgunningFogScore () {\n\t\treturn Math.round(\n\t\t\t(\n\t\t\t\t(\n\t\t\t\t\tthis.averageWordsPerSentence()\n\t\t\t\t\t+ this.percentageWordsWithThreeSyllables(false)\n\t\t\t\t) * 0.4\n\t\t\t) * 10\n\t\t) / 10;\n\t}\n\t\n\t/**\n\t * Calculates the Coleman Liau index\n\t *\n\t * @return {number}\n\t */\n\tcolemanLiauIndex () {\n\t\treturn Math.round(\n\t\t\t(\n\t\t\t\t(\n\t\t\t\t\t5.89\n\t\t\t\t\t* (this.letterCount() / this.wordCount())\n\t\t\t\t) - (\n\t\t\t\t\t0.3\n\t\t\t\t\t* (this.sentenceCount() / this.wordCount())\n\t\t\t\t) - 15.8\n\t\t\t) * 10\n\t\t) / 10;\n\t}\n\t\n\t/**\n\t * Calculates the Smog index\n\t *\n\t * @return {number}\n\t */\n\tsmogIndex () {\n\t\treturn Math.round(\n\t\t\t1.043\n\t\t\t* Math.sqrt(\n\t\t\t\t(\n\t\t\t\t\tthis.wordsWithThreeSyllables()\n\t\t\t\t\t* (30 / this.sentenceCount())\n\t\t\t\t) + 3.1291\n\t\t\t) * 10\n\t\t) / 10;\n\t}\n\t\n\t/**\n\t * Calculates the Automated Readability index\n\t *\n\t * @return {number}\n\t */\n\tautomatedReadabilityIndex () {\n\t\treturn Math.round(\n\t\t\t(\n\t\t\t\t(\n\t\t\t\t\t4.71\n\t\t\t\t\t* (this.letterCount() / this.wordCount())\n\t\t\t\t) + (\n\t\t\t\t\t0.5\n\t\t\t\t\t* (this.wordCount() / this.sentenceCount())\n\t\t\t\t) - 21.43\n\t\t\t) * 10\n\t\t) / 10;\n\t}\n\t\n\t// Helpers\n\t// =========================================================================\n\t\n\t/**\n\t * Cleans the text for processing\n\t *\n\t * @param {string} text - Text to clean\n\t * @return {string}\n\t */\n\tstatic cleanText (text) {\n\t\t// All these tags should be preceded by a full stop\n\t\t['li', 'p', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'dd'].forEach(tag => {\n\t\t\ttext.replace(`</${tag}>`, \".\");\n\t\t});\n\t\t\n\t\ttext = text\n\t\t\t\t// Strip tags\n\t\t\t\t.replace(/<[^>]+>/g, '')\n\t\t\t\t\n\t\t\t\t// Replace commas, hyphens etc (count them as spaces)\n\t\t\t\t.replace(/[,:;()-]/g, ' ')\n\t\t\t\t\n\t\t\t\t// Unify terminators\n\t\t        .replace(/[.!?]/g, '.')\n\t\t\t\t\n\t\t\t\t// Strip leading whitespace\n\t\t\t\t.replace(/^\\s+/g, '')\n\t\t\t\t\n\t\t\t\t// Replace new lines with spaces\n\t\t\t\t.replace(/[ ]*(\\n|\\r\\n|\\r)[ ]*/g, ' ')\n\t\t\t\t\n\t\t\t\t// Check for duplicated terminators\n\t\t\t\t.replace(/([.])[. ]+/g, '.')\n\t\t\t\t\n\t\t\t\t// Pad sentence terminators\n\t\t\t\t.replace(/[ ]*([.])/g, '. ')\n\t\t\t\t\n\t\t\t\t// Remove multiple spaces\n\t\t\t\t.replace(/\\s+/g, ' ')\n\t\t\t\t\n\t\t\t\t// Strip trailing whitespace\n\t\t\t\t.replace(/\\s+$/g, '')\n\t\t\t\t\n\t\t\t\t// Strip apostrophe\n\t\t\t\t.replace(/'/g, '');\n\t\t\n\t\t// Add final terminator, just in case it's missing\n\t\ttext += \".\";\n\t\t\n\t\treturn text;\n\t}\n\t\n\t/**\n\t * Counts the number of syllables a given word\n\t *\n\t * @param {string} word\n\t * @return {number}\n\t */\n\tstatic syllableCount (word) {\n\t\tlet syllableCount = 0,\n\t\t\tprefixSuffixCount = 0;\n\t\t\n\t\t// Prepare word - make lower case & remove non-word characters\n\t\tword = word.toLowerCase().replace(/[^a-z]/g, '');\n\t\t\n\t\t// Specific common exceptions that don't follow the rule set below are\n\t\t// handled individually.\n\t\t// Array of problem words (with word as key, syllable count as value)\n\t\tconst problemWords = {\n\t\t\t'simile':       3,\n\t\t\t'forever':      3,\n\t\t\t'shoreline':    2,\n\t\t};\n\t\t\n\t\t// Return if we've hit a problem word\n\t\tif (problemWords.hasOwnProperty(word)) return problemWords[word];\n\t\t\n\t\t// Syllables that would be counted as two, but should be one\n\t\tconst subSyllables = [\n\t\t\t/cial/,\n\t\t\t/tia/,\n\t\t\t/cius/,\n\t\t\t/cious/,\n\t\t\t/giu/,\n\t\t\t/ion/,\n\t\t\t/iou/,\n\t\t\t/sia$/,\n\t\t\t/[^aeiuoyt]{2,}ed$/,\n\t\t\t/.ely$/,\n\t\t\t/[cg]h?e[rsd]?$/,\n\t\t\t/rved?$/,\n\t\t\t/[aeiouy][dt]es?$/,\n\t\t\t/[aeiouy][^aeiouydt]e[rsd]?$/,\n\t\t\t/^[dr]e[aeiou][^aeiou]+$/,      // Sorts out deal, deign etc.\n\t\t\t/[aeiouy]rse$/,                 // Purse, hearse\n\t\t];\n\t\t\n\t\t// Syllables that would be counted as one, but should be two\n\t\tconst addSyllables = [\n\t\t\t/ia/,\n\t\t\t/riet/,\n\t\t\t/dien/,\n\t\t\t/iu/,\n\t\t\t/io/,\n\t\t\t/ii/,\n\t\t\t/[aeiouym]bl$/,\n\t\t\t/[aeiou]{3}/,\n\t\t\t/^mc/,\n\t\t\t/ism$/,\n\t\t\t/([^aeiouy])\\1l$/,\n\t\t\t/[^l]lien/,\n\t\t\t/^coa[dglx]./,\n\t\t\t/[^gq]ua[^auieo]/,\n\t\t\t/dnt$/,\n\t\t\t/uity$/,\n\t\t\t/ie(r|st)$/\n\t\t];\n\t\t\n\t\t// Single syllable prefixes & suffixes\n\t\tconst prefixSuffix = [\n\t\t\t/^un/,\n\t\t\t/^fore/,\n\t\t\t/ly$/,\n\t\t\t/less$/,\n\t\t\t/ful$/,\n\t\t\t/ers?$/,\n\t\t\t/ings?$/\n\t\t];\n\t\t\n\t\t// Remove prefixes & suffixes, and count how many were takes\n\t\tprefixSuffix.forEach(regex => {\n\t\t\tif (word.match(regex)) {\n\t\t\t\tword = word.replace(regex, '');\n\t\t\t\tprefixSuffixCount++;\n\t\t\t}\n\t\t});\n\t\t\n\t\tlet wordPartCount = word\n\t\t\t.split(/[^aeiouy]+/ig)\n\t\t\t.filter(wordPart => !!wordPart.replace(/\\s+/ig, '').length)\n\t\t\t.length;\n\t\t\n\t\t// Get preliminary syllable count\n\t\tsyllableCount = wordPartCount + prefixSuffixCount;\n\t\t\n\t\t// Some syllables do not follow normal rules, check for them\n\t\tsubSyllables.forEach(syllable => {\n\t\t\tword.match(syllable) && syllableCount--;\n\t\t});\n\t\t\n\t\taddSyllables.forEach(syllable => {\n\t\t\tword.match(syllable) && syllableCount++;\n\t\t});\n\t\t\n\t\treturn syllableCount || 1;\n\t}\n\t\n\t/**\n\t * Returns the length of the text\n\t *\n\t * @return {Number}\n\t */\n\ttextLength () {\n\t\treturn this.text.length;\n\t}\n\t\n\t/**\n\t * Counts the number of letters in the text\n\t *\n\t * @return {Number}\n\t */\n\tletterCount () {\n\t\treturn this.text.replace(/[^a-z]+/ig, '').length;\n\t}\n\t\n\t/**\n\t * Counts the number of sentences in the text\n\t *\n\t * @return {Number|number}\n\t */\n\tsentenceCount () {\n\t\t// FIXME: This will be tripped up by \"Mr.\" or \"U.K.\"\n\t\treturn this.text.replace(/[^.!?]/g, '').length || 1;\n\t}\n\t\n\t/**\n\t * Counts the number of words in the text\n\t *\n\t * @return {number}\n\t */\n\twordCount () {\n\t\treturn this.words().length || 1;\n\t}\n\t\n\t/**\n\t * Splits the text into an array of words.\n\t *\n\t * @return {Array}\n\t */\n\twords () {\n\t\tif (this._words) return this._words;\n\t\tthis._words = this.text.split(/[^a-z0-9']+/i);\n\t\treturn this._words;\n\t}\n\t\n\t/**\n\t * Calculates the average number of words per sentence\n\t *\n\t * @return {number}\n\t */\n\taverageWordsPerSentence () {\n\t\treturn this.wordCount() / this.sentenceCount();\n\t}\n\t\n\t/**\n\t * Calculates the average number of syllables per word\n\t *\n\t * @return {number}\n\t */\n\taverageSyllablesPerWord () {\n\t\tlet syllableCount = 0,\n\t\t\twordCount = this.wordCount();\n\t\t\n\t\tthis.text.split(/\\s+/).forEach(word => {\n\t\t\tsyllableCount += TextStatistics.syllableCount(word);\n\t\t});\n\t\t\n\t\treturn (syllableCount || 1) / (wordCount || 1);\n\t}\n\t\n\t/**\n\t * Counts the number of words in the text w/ three syllables\n\t *\n\t * @param {boolean} countProperNouns - If true, will ignore proper nouns or\n\t *     capitalized words.\n\t * @return {number}\n\t */\n\twordsWithThreeSyllables (countProperNouns = true) {\n\t\tlet longWordCount = 0;\n\t\t\n\t\tcountProperNouns = countProperNouns !== false;\n\t\t\n\t\tthis.text.split(/\\s+/).forEach(word => {\n\t\t\t// We don't count proper nouns or capitalized words if the\n\t\t\t// `countProperNouns` argument is set (defaults to true).\n\t\t\tif (!word.match(/^[A-Z]/) || countProperNouns) {\n\t\t\t\tif (this.syllableCount(word) > 2) longWordCount++;\n\t\t\t}\n\t\t});\n\t\t\n\t\treturn longWordCount;\n\t}\n\t\n\t/**\n\t * Calculates the percentage of words with three syllables\n\t *\n\t * @param {boolean} countProperNouns - If true, will ignore proper nouns or\n\t *     capitalized words.\n\t * @return {number}\n\t */\n\tpercentageWordsWithThreeSyllables (countProperNouns = true) {\n\t\treturn (\n\t\t\tthis.wordsWithThreeSyllables(countProperNouns) / this.wordCount()\n        ) * 100;\n\t}\n\t\n}","/* global Craft */\nexport default function fail (message) {\n\tCraft.cp.displayError(`<strong>SEO:</strong> ${message}`);\n\twindow.console && console.error.apply( // eslint-disable-line no-console\n\t\tconsole,\n\t\t[\n\t\t\t`%cSEO: %c ${message}`,\n\t\t\t'font-weight: bold;',\n\t\t\t'font-weight: normal;',\n\t\t]\n\t);\n}","/**\n * ## Debounce\n *\n * A function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds.\n *\n * If `immediate` is passed, trigger the function on the leading edge,\n * instead of the trailing.\n *\n * ```jsx\n *\n * // ...\n *\n * <input onInput={this.handleInput}>\n *\n * // ...\n *\n * handleInput = debounce(e => { /* ... *\\/ });\n *\n * ```\n *\n * @param {function} func - The function to debounce\n * @param {number=} wait - How long, in milliseconds, to delay between attempts\n * @param {boolean=} immediate - Fire on the leading edge\n * @returns {Function}\n */\nexport default function debounce (func, wait = 300, immediate = false) {\n\tlet timeout;\n\t\n\tif (wait === 0) {\n\t\treturn function () {\n\t\t\tfunc.apply(this, arguments);\n\t\t};\n\t}\n\t\n\treturn function () {\n\t\tconst context = this\n\t\t\t, args = arguments;\n\t\t\n\t\tif (args[0].constructor.name === 'SyntheticEvent')\n\t\t\targs[0].persist();\n\t\t\n\t\tconst later = function() {\n\t\t\ttimeout = null;\n\t\t\tif (!immediate) func.apply(context, args);\n\t\t};\n\t\tconst callNow = immediate && !timeout;\n\t\tclearTimeout(timeout);\n\t\ttimeout = setTimeout(later, wait);\n\t\tif (callNow) func.apply(context, args);\n\t};\n}","export default function capitalize (s) {\n\treturn s[0].toUpperCase() + s.slice(1);\n}","/**\n * External URL checker\n * From http://stackoverflow.com/a/9744104/550109\n *\n * @param {string} url\n */\nexport default function isExternalUrl (url) {\n\tconst domain = url => {\n\t\tlet res = /https?:\\/\\/((?:[\\w\\d-]+\\.)+[\\w\\d]{2,})/i.exec(url);\n\t\treturn res !== null ? res[1] : false;\n\t};\n\t\n\treturn domain(location.href) === domain(url);\n}","/**\n * Counts the number of times a string appears in an array\n *\n * @param {Array} arr\n * @param {string|Array} word - Can be a string with a single word, or an array\n *     of words that would be space separated.\n * @return {number}\n */\nexport default function countInArray (arr, word) {\n\tlet c = 0,\n\t\ti = arr.length;\n\t\n\tif (Array.isArray(word)) {\n\t\tconst l = arr.length\n\t\t\t, w = word.length;\n\t\t\n\t\twhile (i--) {\n\t\t\tlet x = w,\n\t\t\t\ta = 0;\n\t\t\t\n\t\t\twhile (x-- && i + x < l)\n\t\t\t\tif (arr[i + x].toLowerCase() === word[x]) a++;\n\t\t\t\n\t\t\tif (a === w) c++;\n\t\t}\n\t} else {\n\t\twhile (i--) if (arr[i].toLowerCase() === word) c++;\n\t}\n\t\n\treturn c;\n}","/**\n * Creates a rating element\n *\n * @param {string} level\n * @param {string=} tag\n * @return {Element}\n */\nimport capitalize from './capitalize';\nimport t from './createElement';\n\nexport default function createRating (level, tag = 'div') {\n\tconst name = capitalize(level);\n\t\n\treturn t(tag, {\n\t\t'class': `seo--light ${level}`,\n\t\t'title': name,\n\t}, name);\n}","/* globals $, Craft, Garnish */\n/**\n * Entry Markup\n *\n * @author    Tam McDonald\n * @copyright Ether Creative 2017\n * @link      https://ethercreative.co.uk\n * @package   SEO\n * @since     2.0.0\n */\n\nimport { c, fail } from \"../helpers\";\n\nclass EntryMarkup {\n\t\n\t// Variables\n\t// =========================================================================\n\t\n\tframe = null;\n\tpostData = null;\n\t\n\t// Entry Markup\n\t// =========================================================================\n\t\n\tconstructor () {\n\t\tthis.clean();\n\t}\n\t\n\t// Actions\n\t// =========================================================================\n\t\n\t/**\n\t * Gets and stores a parse-able preview of the entry markup\n\t *\n\t * @return {Promise}\n\t */\n\tupdate () {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst nextPostData = Garnish.getPostData(\n\t\t\t\tdocument.getElementById(\"main-form\")\n\t\t\t);\n\t\t\t\n\t\t\t// Skip if no changes have been made to the content\n\t\t\tif (this.postData && Craft.compare(nextPostData, this.postData)) {\n\t\t\t\tresolve(this.frame.contentWindow.document.body);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tthis.postData = nextPostData;\n\t\t\t\n\t\t\t// Get the markup from the live preview\n\t\t\t$.ajax({\n\t\t\t\turl: Craft.livePreview.previewUrl,\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: $.extend({}, nextPostData, Craft.livePreview.basePostData),\n\t\t\t\txhrFields: { withCredentials: true },\n\t\t\t\tcrossDomain: true,\n\t\t\t\tsuccess: data => {\n\t\t\t\t\t// Remove all <script/> & <style/> tags\n\t\t\t\t\tdata = data.replace(\n\t\t\t\t\t\t/<script([^'\"]|\"(\\\\.|[^\"\\\\])*\"|'(\\\\.|[^'\\\\])*')*?<\\/script>/g,\n\t\t\t\t\t\t\"\"\n\t\t\t\t\t);\n\t\t\t\t\t\n\t\t\t\t\tdata = data.replace(\n\t\t\t\t\t\t/<style([^'\"]|\"(\\\\.|[^\"\\\\])*\"|'(\\\\.|[^'\\\\])*')*?<\\/style>/g,\n\t\t\t\t\t\t\"\"\n\t\t\t\t\t);\n\t\t\t\t\t\n\t\t\t\t\t// Write the markup to our iFrame\n\t\t\t\t\tthis.frame.contentWindow.document.open();\n\t\t\t\t\tthis.frame.contentWindow.document.write(data);\n\t\t\t\t\tthis.frame.contentWindow.document.close();\n\t\t\t\t\t\n\t\t\t\t\tif (this.frame.contentWindow.document.body) {\n\t\t\t\t\t\tresolve(this.frame.contentWindow.document.body);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfail(\"Failed to parse entry preview\");\n\t\t\t\t\t\treject();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\terror: () => {\n\t\t\t\t\tfail(\"Failed to retrieve entry preview\");\n\t\t\t\t\treject();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\t\n\t/**\n\t * Creates an empty, hidden iframe to store the preview content, removing\n\t * the old one (if it exists)\n\t */\n\tclean () {\n\t\tthis.frame && document.body.removeChild(this.frame);\n\t\t\n\t\tthis.frame = c(\"iframe\", {\n\t\t\tframeborder: \"0\",\n\t\t\tstyle: `\n\t\t\t\twidth: 0;\n\t\t\t\theight: 0;\n\t\t\t`\n\t\t});\n\t\t\n\t\tdocument.body.appendChild(this.frame);\n\t}\n\t\n}\n\nexport default new EntryMarkup();\n","// TODO: Make all public facing text translatable\n\nexport const SEO_RATING = {\n\tNONE: 'neutral',\n\tGOOD: 'good',\n\tAVERAGE: 'average',\n\tPOOR: 'poor',\n};\n\nexport const SEO_RATING_LABEL = {\n\tneutral: 'Not yet rated',\n\tgood: 'Looks good',\n\taverage: 'Room for improvement',\n\tpoor: 'Needs work',\n};\n\nexport const SEO_REASONS = {\n\tnoContent: 'You don\\'t have any content, adding some would be a good start!',\n\t\n\ttitleLengthFailMin: 'The title contains {l} characters which is less than the recommended minimum of 40 characters.',\n\ttitleLengthFailMax: 'The title contains {l} characters which is greater than the recommended maximum of 60 characters.',\n\ttitleLengthSuccess: 'The title is between the recommended minimum and maximum length.',\n\t\n\ttitleKeywordFail: 'The title does not contain the keyword. Try adding it near the beginning of the title.',\n\ttitleKeywordSuccess: 'The title contains the keyword near the beginning.',\n\ttitleKeywordPosFail: 'The title contains the keyword, but not near the beginning. Try to move it closer to the start of the title.',\n\t\n\tslugFail: 'The URL does not contain the keyword. Try adding it to the slug.',\n\tslugSuccess: 'The URL contains the keyword.',\n\t\n\tdescFail: 'The description does not contain the keyword. Try adding it near the beginning of the description.',\n\tdescSuccess: 'The description contains the keyword.',\n\t\n\twordCountFail: 'Your text contains {l} words, this is less than the recommended 300 word minimum.',\n\twordCountSuccess: 'Your text contains {l} words, this is more than the recommended 300 word minimum.',\n\t\n\tfirstParagraphFail: 'The keyword does not appear in the first paragraph of your text. Try adding it.',\n\tfirstParagraphSuccess: 'The keyword appears in the first paragraph of your text.',\n\t\n\timagesFail: 'Less than half of the images have alt tags containing the keyword, try adding it to more images.',\n\timagesOk: 'Half or more of the images have alt tags containing the keyword. To improve this, try adding keywords to all the images alt tags.',\n\timagesSuccess: 'All of the images have alt tags containing the keyword.',\n\t\n\tlinksFail: 'The page does not contain any outgoing links. Try adding some.',\n\tlinksSuccess: 'The page contains outgoing links.',\n\t\n\theadingsFail: 'The page does not contain any headings that contain the keyword. Try adding some with the keyword.',\n\theadingsOk: 'The page contains some lower importance headings that contain the keyword. Try adding the keyword to some h2\\'s.',\n\theadingsSuccess: 'The page contains higher importance headings with the keyword.',\n\t\n\tdensityFail: 'The keyword does not appear in the text. It is important to include it in your content.',\n\tdensityFailUnder: 'The keyword density is {d}%, which is well under the advised 2.5%. Try increasing the number of times the keyword is used.',\n\tdensityOk: 'The keyword density is {d}%, which is over the advised 2.5%. The keyword appears {c} times.',\n\tdensitySuccess: 'The keyword density is {d}%, which is near the advised 2.5%.',\n\t\n\tfleschFail: 'The Flesch Reading ease score is {l} which is considered best for university graduates. Try reducing your sentence length to improve readability.',\n\tfleschOk: 'The Flesch Reading ease score is {l} which is average, and considered easily readable by most users.',\n\tfleschSuccess: 'The Flesch Reading ease score is {l} meaning your content is readable by all ages.',\n};","/**\n * Keyword Checklist\n *\n * @author    Tam McDonald\n * @copyright Ether Creative 2017\n * @link      https://ethercreative.co.uk\n * @package   SEO\n * @since     2.0.0\n */\n\nimport EntryMarkup from './EntryMarkup';\nimport { SEO_RATING, SEO_REASONS } from '../const';\nimport {\n\tcountInArray, createRating, isExternalUrl, c,\n\tTextStatistics\n} from '../helpers';\n\nexport default class KeywordChecklist {\n\t\n\t// Variables\n\t// =========================================================================\n\t\n\tkeyword = null;\n\tkeywordLower = null;\n\tratings = [];\n\tratingOccurrence = {};\n\t\n\tcontent = null;\n\ttext = null;\n\tstats = null;\n\t\n\t// KeywordChecklist\n\t// =========================================================================\n\t\n\tconstructor (namespace, SEO) {\n\t\tthis.namespace = namespace;\n\t\tthis.SEO = SEO;\n\t\t\n\t\tthis.bar = document.getElementById(`${namespace}KeywordBar`);\n\t\tthis.checklist = document.getElementById(`${namespace}KeywordChecklist`);\n\t}\n\t\n\t// Actions\n\t// =========================================================================\n\t\n\t/**\n\t * Calculates the checklist ratings for the given keyword\n\t *\n\t * @param {string} keyword\n\t * @param {Function} onNewRating\n\t */\n\tcalculate (keyword, onNewRating) {\n\t\tEntryMarkup.update().then(content => {\n\t\t\tthis.ratings = [];\n\t\t\tthis.keyword = keyword;\n\t\t\tthis.keywordLower = keyword.toLowerCase();\n\t\t\t\n\t\t\t// Remove line breaks, tabs, and surplus spaces from page text\n\t\t\tthis.text = content.textContent.replace(\n\t\t\t\t/(\\r\\n|\\r|\\n|\\t+)/gmi,\n\t\t\t\t''\n\t\t\t);\n\t\t\t\n\t\t\t// If there's no text, complain\n\t\t\tif (this.text.trim() === \"\") {\n\t\t\t\tthis.addRating(\n\t\t\t\t\tSEO_RATING.POOR,\n\t\t\t\t\tSEO_REASONS.noContent\n\t\t\t\t);\n\t\t\t\t\n\t\t\t\t// Re-render the checklist\n\t\t\t\tthis.renderChecklist();\n\t\t\t\t\n\t\t\t\tonNewRating(SEO_RATING.POOR);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tthis.content = content;\n\t\t\tthis.stats = new TextStatistics(this.text);\n\t\t\t\n\t\t\t// Run all `judge` functions\n\t\t\tObject.getOwnPropertyNames(KeywordChecklist.prototype)\n\t\t\t      .filter(f => f.indexOf('judge') > -1)\n\t\t\t      .forEach(f => { this[f](); });\n\n\t\t\t// Sort the results by rating, keeping track of the number of times\n\t\t\t// each rating occurs\n\t\t\tthis.ratingOccurrence = {};\n\t\t\t\n\t\t\tthis.ratings.sort((a, b) => {\n\t\t\t\treturn (\n\t\t\t\t\tKeywordChecklist.ratingValue(b.rating)\n\t\t\t\t\t- KeywordChecklist.ratingValue(a.rating)\n\t\t\t\t);\n\t\t\t}).forEach(({ rating }) => {\n\t\t\t\tif (!this.ratingOccurrence.hasOwnProperty(rating))\n\t\t\t\t\tthis.ratingOccurrence[rating] = 0;\n\t\t\t\t\n\t\t\t\tthis.ratingOccurrence[rating]++;\n\t\t\t});\n\t\t\t\n\t\t\t// Find the most prevalent rating\n\t\t\tconst overallRating =\n\t\t\t\tObject.keys(this.ratingOccurrence)\n\t\t\t\t      .reduce(\n\t\t\t\t      \t(a, b) =>\n\t\t\t\t\t        this.ratingOccurrence[a] > this.ratingOccurrence[b]\n\t\t\t\t\t\t        ? a : b\n\t\t\t\t      );\n\t\t\t\n\t\t\t// Re-render the checklist\n\t\t\tthis.renderChecklist();\n\t\t\t\n\t\t\t// Run the callback\n\t\t\tonNewRating(overallRating);\n\t\t}).catch(err => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error(err);\n\t\t\t// TODO: Disable checklist, show error overlaying\n\t\t\t// Note to self: This also catches JS errors\n\t\t});\n\t}\n\t\n\t/**\n\t * Clears the checklist\n\t */\n\tclear (onEmptyRating) {\n\t\t// Clear bar\n\t\tlet i = this.bar.children.length;\n\t\twhile (i--) {\n\t\t\tconst fill = this.bar.children[i];\n\t\t\tfill.style.transform = \"\";\n\t\t}\n\t\t\n\t\t// Clear checklist\n\t\twhile (this.checklist.firstElementChild)\n\t\t\tthis.checklist.removeChild(this.checklist.firstElementChild);\n\t\t\n\t\tconst empty = document.createElement(\"li\");\n\t\tempty.style.textAlign = \"center\";\n\t\tempty.textContent = \"No keyword selected\";\n\t\t\n\t\tthis.checklist.appendChild(empty);\n\t\t\n\t\tonEmptyRating();\n\t}\n\t\n\t/**\n\t * Renders the checklist & bar\n\t */\n\trenderChecklist () {\n\t\t// Re-render bar\n\t\tconst ratingCount = this.ratings.length;\n\t\tlet currentFillSize = 0;\n\t\tfor (let i = 0; i < this.bar.children.length; i++) {\n\t\t\tlet fill = this.bar.children[i];\n\t\t\tlet rating = fill.className;\n\t\t\t\n\t\t\tfill.style.transform = `translateX(${currentFillSize}%)`;\n\t\t\t\n\t\t\tif (this.ratingOccurrence.hasOwnProperty(rating)) {\n\t\t\t\tcurrentFillSize +=\n\t\t\t\t\t(this.ratingOccurrence[rating] / ratingCount) * 100;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Re-render checklist\n\t\twhile (this.checklist.firstElementChild)\n\t\t\tthis.checklist.removeChild(this.checklist.firstElementChild);\n\t\t\n\t\tthis.ratings.forEach(rating => {\n\t\t\tthis.checklist.appendChild(this.renderChecklistItem(rating));\n\t\t});\n\t}\n\t\n\t// Calculations\n\t// =========================================================================\n\t\n\t/**\n\t * Judge the length of the title\n\t */\n\tjudgeTitleLength () {\n\t\tconst l = this.SEO.snippetFields.title.value.length;\n\t\t\n\t\tthis.addRating(\n\t\t\tl < 40 || l > 60 ? SEO_RATING.POOR : SEO_RATING.GOOD,\n\t\t\tl < 40\n\t\t\t\t? SEO_REASONS.titleLengthFailMin.replace('{l}', l)\n\t\t\t\t: l > 60\n\t\t\t\t\t? SEO_REASONS.titleLengthFailMax.replace(\"{l}\", l)\n\t\t\t\t\t: SEO_REASONS.titleLengthSuccess\n\t\t);\n\t}\n\t\n\t/**\n\t * Judge the positioning of the keyword in the title\n\t */\n\tjudgeTitleKeyword () {\n\t\tconst title = this.SEO.snippetFields.title.value;\n\t\tconst index = title.toLowerCase().indexOf(this.keywordLower);\n\t\t\n\t\tif (index > -1) {\n\t\t\tif (index <= title.length * 0.3) {\n\t\t\t\tthis.addRating(\n\t\t\t\t\tSEO_RATING.GOOD,\n\t\t\t\t\tSEO_REASONS.titleKeywordSuccess\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tthis.addRating(\n\t\t\t\tSEO_RATING.AVERAGE,\n\t\t\t\tSEO_REASONS.titleKeywordPosFail\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tthis.addRating(\n\t\t\tSEO_RATING.POOR,\n\t\t\tSEO_REASONS.titleKeywordFail\n\t\t);\n\t}\n\t\n\t/**\n\t * Judge the keyword in the slug\n\t */\n\tjudgeSlug () {\n\t\tif (!this.SEO.snippetFields.slug)\n\t\t\treturn;\n\t\t\n\t\tconst slug = this.SEO.snippetFields.slug.textContent.toLowerCase();\n\t\tconst keyword = this.keywordLower.replace(/[^a-zA-Z0-9-_]/g, '');\n\t\t\n\t\tif (slug.indexOf(keyword) > -1) {\n\t\t\tthis.addRating(\n\t\t\t\tSEO_RATING.GOOD,\n\t\t\t\tSEO_REASONS.slugSuccess\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tthis.addRating(\n\t\t\tSEO_RATING.POOR,\n\t\t\tSEO_REASONS.slugFail\n\t\t);\n\t}\n\t\n\t/**\n\t * Judge the location of the keyword in the description\n\t *\n\t * TODO: Check if keyword appears in first half / appearance count\n\t */\n\tjudgeDesc () {\n\t\tconst desc = this.SEO.snippetFields.desc.value.toLowerCase();\n\t\t\n\t\tif (desc.indexOf(this.keywordLower) > -1) {\n\t\t\tthis.addRating(\n\t\t\t\tSEO_RATING.GOOD,\n\t\t\t\tSEO_REASONS.descSuccess\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tthis.addRating(\n\t\t\tSEO_RATING.POOR,\n\t\t\tSEO_REASONS.descFail\n\t\t);\n\t}\n\t\n\t/**\n\t * Judge the number of words\n\t */\n\tjudgeWordCount () {\n\t\tconst count = this.stats.wordCount();\n\t\t\n\t\tif (count > 300) {\n\t\t\tthis.addRating(\n\t\t\t\tSEO_RATING.GOOD,\n\t\t\t\tSEO_REASONS.wordCountSuccess.replace('{l}', count)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tthis.addRating(\n\t\t\tSEO_RATING.POOR,\n\t\t\tSEO_REASONS.wordCountFail.replace('{l}', count)\n\t\t);\n\t}\n\t\n\t/**\n\t * Judge keyword in first paragraph\n\t */\n\tjudgeFirstParagraph () {\n\t\tconst p = this.content.querySelector('p');\n\t\t\n\t\tif (p && p.textContent.toLowerCase().indexOf(this.keywordLower) > -1) {\n\t\t\tthis.addRating(\n\t\t\t\tSEO_RATING.GOOD,\n\t\t\t\tSEO_REASONS.firstParagraphSuccess\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tthis.addRating(\n\t\t\tSEO_RATING.POOR,\n\t\t\tSEO_REASONS.firstParagraphFail\n\t\t);\n\t}\n\t\n\t/**\n\t * Judge the number of images with the keyword in their alts\n\t *\n\t * TODO: Look into <picture> & <figure> tag effect on SEO\n\t */\n\tjudgeImages () {\n\t\tconst imgs = this.content.getElementsByTagName('img');\n\t\t\n\t\tif (!imgs.length) return;\n\t\t\n\t\tlet withKeywordAlt = 0,\n\t\t\ti = imgs.length;\n\t\t\n\t\twhile (i--) {\n\t\t\tlet alt = imgs[i].getAttribute('alt');\n\t\t\tif (alt && alt.toLowerCase().indexOf(this.keywordLower) > -1)\n\t\t\t\twithKeywordAlt++;\n\t\t}\n\t\t\n\t\tif (withKeywordAlt >= imgs.length * 0.8) {\n\t\t\tthis.addRating(\n\t\t\t\tSEO_RATING.GOOD,\n\t\t\t\tSEO_REASONS.imagesSuccess\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif (withKeywordAlt >= imgs.length * 0.5) {\n\t\t\tthis.addRating(\n\t\t\t\tSEO_RATING.AVERAGE,\n\t\t\t\tSEO_REASONS.imagesOk\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tthis.addRating(\n\t\t\tSEO_RATING.POOR,\n\t\t\tSEO_REASONS.imagesFail\n\t\t);\n\t}\n\t\n\t/**\n\t * Judge whether the content contains external links\n\t *\n\t * TODO: Should this be counting instead just seeing if one exists?\n\t */\n\tjudgeLinks () {\n\t\tconst a = this.content.getElementsByTagName('a');\n\t\t\n\t\tif (!a.length) return;\n\t\t\n\t\tfor (let i = 0; i < a.length; i++) if (isExternalUrl(a[i].href)) {\n\t\t\tthis.addRating(\n\t\t\t\tSEO_RATING.GOOD,\n\t\t\t\tSEO_REASONS.linksSuccess\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tthis.addRating(\n\t\t\tSEO_RATING.POOR,\n\t\t\tSEO_REASONS.linksFail\n\t\t);\n\t}\n\t\n\t/**\n\t * Judge the number of headings (and their level) that contain the keyword\n\t */\n\tjudgeHeadings () {\n\t\tconst headings = this.content.querySelectorAll('h1, h2, h3, h4, h5, h6');\n\t\t\n\t\tif (!headings.length) return;\n\t\t\n\t\tlet primary = 0,\n\t\t\tsecondary = 0,\n\t\t\ti = headings.length;\n\t\t\n\t\twhile (i--) {\n\t\t\tlet h = headings[i];\n\t\t\t\n\t\t\tif (h.textContent.toLowerCase().indexOf(this.keywordLower) === -1)\n\t\t\t\tcontinue;\n\t\t\t\n\t\t\tif (['h1', 'h2'].indexOf(h.nodeName.toLowerCase()) > -1) primary++;\n\t\t\telse secondary++;\n\t\t}\n\t\t\n\t\tif (primary > 0) {\n\t\t\tthis.addRating(\n\t\t\t\tSEO_RATING.GOOD,\n\t\t\t\tSEO_REASONS.headingsSuccess\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif (secondary > 0) {\n\t\t\tthis.addRating(\n\t\t\t\tSEO_RATING.AVERAGE,\n\t\t\t\tSEO_REASONS.headingsOk\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tthis.addRating(\n\t\t\tSEO_RATING.POOR,\n\t\t\tSEO_REASONS.headingsFail\n\t\t);\n\t}\n\t\n\t/**\n\t * Judge the density of the keyword within the content\n\t */\n\tjudgeDensity () {\n\t\tconst words = this.stats.words()\n\t\t\t, keyword = ~~this.keywordLower.indexOf(' ')\n\t\t\t\t? this.keywordLower.split(' ')\n\t\t\t\t: this.keywordLower;\n\t\t\n\t\tconst keyCount = countInArray(words, keyword)\n\t\t\t, reduceWordCount = Array.isArray(keyword) ? keyword.length : 0;\n\t\t\n\t\tconst wordsLength = words.length - reduceWordCount;\n\t\t\n\t\tconst keyPercent = +(\n\t\t\t100 + (\n\t\t\t\t(keyCount - wordsLength) / wordsLength\n\t\t\t) * 100\n\t\t).toFixed(2);\n\t\t\n\t\tif (keyPercent < 1.0) {\n\t\t\tthis.addRating(\n\t\t\t\tSEO_RATING.POOR,\n\t\t\t\tSEO_REASONS.densityFailUnder.replace('{d}', keyPercent)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif (keyPercent <= 2.5) {\n\t\t\tthis.addRating(\n\t\t\t\tSEO_RATING.GOOD,\n\t\t\t\tSEO_REASONS.densitySuccess.replace('{d}', keyPercent)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif (keyPercent > 2.5) {\n\t\t\tthis.addRating(\n\t\t\t\tSEO_RATING.AVERAGE,\n\t\t\t\tSEO_REASONS.densityOk\n\t\t\t\t           .replace('{d}', keyPercent)\n\t\t\t\t           .replace('{c}', keyCount)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tthis.addRating(\n\t\t\tSEO_RATING.POOR,\n\t\t\tSEO_REASONS.densityFail\n\t\t);\n\t}\n\t\n\t/**\n\t * Judges the Flesch-Kincaid reading ease\n\t */\n\tjudgeFleschEase () {\n\t\tconst level = this.stats.fleschKincaidReadingEase();\n\t\t\n\t\tif (level >= 80) {\n\t\t\tthis.addRating(\n\t\t\t\tSEO_RATING.GOOD,\n\t\t\t\tSEO_REASONS.fleschSuccess.replace('{l}', level)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif (level >= 60) {\n\t\t\tthis.addRating(\n\t\t\t\tSEO_RATING.AVERAGE,\n\t\t\t\tSEO_REASONS.fleschOk.replace('{l}', level)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tthis.addRating(\n\t\t\tSEO_RATING.POOR,\n\t\t\tSEO_REASONS.fleschFail.replace('{l}', level)\n\t\t);\n\t\treturn;\n\t}\n\t\n\t// Helpers\n\t// =========================================================================\n\t\n\t/**\n\t * Converts the SEO Rating to a number (for sorting)\n\t *\n\t * @param {string} rating\n\t * @return {number}\n\t */\n\tstatic ratingValue (rating) {\n\t\tswitch (rating) {\n\t\t\tcase SEO_RATING.POOR:\n\t\t\t\treturn -1;\n\t\t\tcase SEO_RATING.AVERAGE:\n\t\t\t\treturn 1;\n\t\t\tcase SEO_RATING.GOOD:\n\t\t\t\treturn 2;\n\t\t\tdefault:\n\t\t\t\treturn 0;\n\t\t}\n\t}\n\t\n\t/**\n\t * Adds a rating\n\t *\n\t * @param {string} rating\n\t * @param {string} reason\n\t */\n\taddRating (rating, reason) {\n\t\tthis.ratings.push({ rating, reason });\n\t}\n\t\n\t/**\n\t * Renders a checklist item\n\t *\n\t * @param {string} rating\n\t * @param {string} reason\n\t * @return {Element}\n\t */\n\trenderChecklistItem = ({ rating, reason }) => {\n\t\treturn c('li', {}, [\n\t\t\tcreateRating(rating),\n\t\t\tc('p', {}, reason)\n\t\t]);\n\t};\n\t\n}\n\n","/* globals Craft */\n/**\n * Focus Keywords\n *\n * @author    Tam McDonald\n * @copyright Ether Creative 2017\n * @link      https://ethercreative.co.uk\n * @package   SEO\n * @since     2.0.0\n */\n\nimport { c, createRating, debounce } from '../helpers';\n\nimport KeywordChecklist from './KeywordChecklist';\nimport { SEO_RATING_LABEL } from '../const';\n\nexport default class FocusKeywords {\n\t\n\t// Variables\n\t// =========================================================================\n\t\n\tactiveKeywordIndex = null;\n\t\n\t// FocusKeywords\n\t// =========================================================================\n\t\n\tconstructor (namespace, SEO) {\n\t\tthis.namespace = namespace;\n\t\tthis.SEO = SEO;\n\t\tthis.keywordsChecklist = new KeywordChecklist(namespace, SEO);\n\t\t\n\t\tthis.keywordsField = document.getElementById(`${namespace}Keywords`);\n\t\tthis.scoreField = document.getElementById(`${namespace}Score`);\n\t\t\n\t\tthis.keywordElem = document.getElementById(`${namespace}Keyword`);\n\t\tthis.ratingElem = document.getElementById(`${namespace}Rating`);\n\t\t\n\t\tthis.initInput();\n\t\tthis.initKeywords();\n\t\t\n\t\tthis.initWatcher();\n\t}\n\t\n\t// Initializers\n\t// =========================================================================\n\t\n\t/**\n\t * Initializes the keywords input\n\t */\n\tinitInput () {\n\t\t// Variables\n\t\tthis.inputWrap =\n\t\t\tdocument.getElementById(this.namespace + 'KeywordsInput');\n\t\tthis.input = this.inputWrap.lastElementChild;\n\t\t\n\t\t// Events\n\t\tthis.inputWrap.addEventListener('click', this.onInputWrapClick);\n\t\tthis.input.addEventListener('focus', this.onInputFocus);\n\t\tthis.input.addEventListener('blur', this.onInputBlur);\n\t\tthis.input.addEventListener('keydown', this.onInputKeyDown);\n\t}\n\t\n\t/**\n\t * Initializes the keywords (if any exist)\n\t */\n\tinitKeywords () {\n\t\ttry {\n\t\t\t// Set initial keywords, adding the index variable\n\t\t\tthis.keywords = JSON.parse(this.keywordsField.value).map((k, i) => {\n\t\t\t\tthis.createKeyword(k.keyword, k.rating, i);\n\t\t\t\t\n\t\t\t\treturn {\n\t\t\t\t\t...k,\n\t\t\t\t\tindex: i,\n\t\t\t\t};\n\t\t\t});\n\t\t} catch (_) {\n\t\t\tthis.keywords = [];\n\t\t}\n\t\t\n\t\t// Set the first keyword (if we have one) to be active\n\t\tthis.keywords.length && this.setActiveKeyword(0);\n\t\t\n\t\t// Fire the keywords change callback\n\t\tthis.onKeywordsChange();\n\t}\n\t\n\t/**\n\t * Watches for any changes in the form containing the SEO field, triggering\n\t * an update when a change occurs\n\t */\n\tinitWatcher () {\n\t\tthis.mo = new MutationObserver(debounce(this.recalculateKeyword, 500));\n\t\t\n\t\tthis.startObserving();\n\t}\n\t\n\t// Actions\n\t// =========================================================================\n\t\n\t/**\n\t * Start watching the form\n\t */\n\tstartObserving () {\n\t\tif (!this.mo) return;\n\t\t\n\t\tlet target = this.keywordsField.form;\n\t\t\n\t\t// If target is null that means we're in livePreview mode\n\t\tif (target === null)\n\t\t\ttarget = Craft.livePreview.$editor[0];\n\t\t\n\t\t// TODO: Only want to watch form elements that will be posted\n\t\tthis.mo.observe(target, {\n\t\t\tchildList: true,\n\t\t\tattributes: true,\n\t\t\tcharacterData: true,\n\t\t\tsubtree: true,\n\t\t});\n\t}\n\t\n\t/**\n\t * Stop watching the form\n\t */\n\tstopObserving () {\n\t\tif (!this.mo) return;\n\t\t\n\t\tthis.mo.disconnect();\n\t\tthis.mo.takeRecords();\n\t}\n\t\n\t/**\n\t * Sets the active keyword & triggers an update to the keyword details\n\t *\n\t * @param index\n\t */\n\tsetActiveKeyword (index) {\n\t\t// If the index is out of bounds, nullify\n\t\tif (!this.keywords.length > index) this.activeKeywordIndex = null;\n\t\t\n\t\t// If the index is current, ignore\n\t\tif (this.activeKeywordIndex === index) return;\n\t\t\n\t\t// If we have an old index, deactivate it\n\t\tif (\n\t\t\tthis.activeKeywordIndex !== null\n\t\t    && this.keywords.length > this.activeKeywordIndex\n\t\t) {\n\t\t\tthis.getKeywordElementAtIndex(this.activeKeywordIndex)\n\t\t\t    .classList.remove('active');\n\t\t}\n\t\t\n\t\t// If our new index isn't out of bounds, activate it\n\t\tif (this.keywords.length > index) {\n\t\t\tthis.activeKeywordIndex = index|0;\n\t\t\tthis.getKeywordElementAtIndex(this.activeKeywordIndex)\n\t\t\t    .classList.add('active');\n\t\t\t\n\t\t\t// Re-calculate\n\t\t\tthis.recalculateKeyword();\n\t\t} else {\n\t\t\t// Otherwise, clear the keywords readout\n\t\t\tthis.keywordsChecklist.clear(this.onEmptyRating);\n\t\t}\n\t}\n\t\n\t/**\n\t * Re-calculate the checklist & rating\n\t */\n\trecalculateKeyword = () => {\n\t\t// Stop watching the form to prevent an update loop\n\t\tthis.stopObserving();\n\t\t\n\t\t// If we have an active keyword, recalculate its details\n\t\tif (this.activeKeywordIndex !== null) {\n\t\t\tconst keyword = this.keywords[this.activeKeywordIndex];\n\t\t\t\n\t\t\tthis.keywordsChecklist.calculate(\n\t\t\t\tkeyword.keyword,\n\t\t\t\tthis.onNewRating.bind(this, keyword.index)\n\t\t\t);\n\t\t}\n\t\t\n\t\tsetTimeout(() => {\n\t\t\t// Start watching the form again, now updates are complete\n\t\t\tthis.startObserving();\n\t\t}, 1);\n\t};\n\t\n\t// Events\n\t// =========================================================================\n\t\n\t/**\n\t * Update the hidden inputs when the keywords change\n\t */\n\tonKeywordsChange = () => {\n\t\t// Store the keywords in the hidden field, keep track of the ratings\n\t\tconst ratingOccurrence = {};\n\t\t\n\t\tthis.keywordsField.value = JSON.stringify(\n\t\t\tthis.keywords.map(({ keyword, rating }) => {\n\t\t\t\tif (!ratingOccurrence.hasOwnProperty(rating))\n\t\t\t\t\tratingOccurrence[rating] = 0;\n\t\t\t\t\n\t\t\t\tratingOccurrence[rating]++;\n\t\t\t\t\n\t\t\t\treturn { keyword, rating };\n\t\t\t})\n\t\t);\n\t\t\n\t\t// If we don't have any ratings, clear the hidden score field\n\t\t// TODO: Change the score field to rating\n\t\tif (!Object.keys(ratingOccurrence).length) {\n\t\t\tthis.scoreField.value = '';\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// Set the score field to the most prevalent rating\n\t\tthis.scoreField.value =\n\t\t\tObject.keys(ratingOccurrence).reduce(\n\t\t\t\t(a, b) => ratingOccurrence[a] > ratingOccurrence[b] ? a : b\n\t\t\t);\n\t};\n\t\n\t/**\n\t * Fired when the keyword checklist generates a new keyword rating\n\t *\n\t * @param {number} keywordIndex\n\t * @param {string} rating\n\t */\n\tonNewRating = (keywordIndex, rating) => {\n\t\t// Update the rating on the keyword\n\t\tconst keyword = this.keywords[keywordIndex];\n\t\t\n\t\t// Catch, on the off chance we try and render after a rating was deleted\n\t\tif (!keyword) {\n\t\t\tthis.onEmptyRating();\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tkeyword.rating = rating;\n\t\t\n\t\t// Re-render keyword rating in input\n\t\tconst elem = this.getKeywordElementAtIndex(keywordIndex);\n\t\telem.removeChild(elem.firstElementChild);\n\t\telem.insertBefore(createRating(rating, 'span'), elem.firstChild);\n\t\t\n\t\t// Set keyword details keyword\n\t\tthis.keywordElem.textContent = keyword.keyword;\n\t\t\n\t\t// Set keyword details rating\n\t\twhile (this.ratingElem.firstChild)\n\t\t\tthis.ratingElem.removeChild(this.ratingElem.firstChild);\n\t\t\n\t\tthis.ratingElem.appendChild(createRating(rating));\n\t\tthis.ratingElem.appendChild(\n\t\t\tdocument.createTextNode(SEO_RATING_LABEL[rating])\n\t\t);\n\t\t\n\t\t// Fire the keywords change callback\n\t\tthis.onKeywordsChange();\n\t};\n\t\n\t/**\n\t * Fired when the keyword checklist is cleared\n\t */\n\tonEmptyRating = () => {\n\t\t// Clear the keyword details keyword\n\t\tthis.keywordElem.innerHTML = \"<em>No keyword selected</em>\";\n\t\t\n\t\t// Set keyword details rating to neutral\n\t\twhile (this.ratingElem.firstChild)\n\t\t\tthis.ratingElem.removeChild(this.ratingElem.firstChild);\n\t\t\n\t\tthis.ratingElem.appendChild(createRating(\"neutral\"));\n\t\tthis.ratingElem.appendChild(\n\t\t\tdocument.createTextNode(SEO_RATING_LABEL[\"neutral\"])\n\t\t);\n\t};\n\t\n\t// Events: Keywords\n\t// -------------------------------------------------------------------------\n\t\n\t/**\n\t * Fixed when a keyword element is clicked.\n\t * Will set that keyword to be the active one.\n\t *\n\t * @param {Event} e\n\t */\n\tonKeywordClick = e => {\n\t\te.preventDefault();\n\t\tthis.setActiveKeyword(e.target.dataset.index);\n\t};\n\t\n\t/**\n\t * Fired when the [x] in the keyword element is clicked.\n\t * Will remove the element and the keyword from `this.keywords`.\n\t *\n\t * @param {Event} e\n\t */\n\tonKeywordRemoveClick = e => {\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t\t\n\t\tconst i = e.target.parentNode.parentNode.dataset.index|0;\n\t\t\n\t\t// Remove keyword\n\t\tconst elem = this.getKeywordElementAtIndex(i);\n\t\telem.parentNode.removeChild(elem);\n\t\t\n\t\tthis.keywords.splice(i, 1);\n\t\t\n\t\t// Re-map indexes\n\t\tthis.keywords = this.keywords.map((k, i) => {\n\t\t\tif (this.activeKeywordIndex === k.index)\n\t\t\t\tthis.activeKeywordIndex = i;\n\t\t\t\n\t\t\tthis.getKeywordElementAtIndex(i)\n\t\t\t    .setAttribute('data-index', i);\n\t\t\t\n\t\t\treturn {\n\t\t\t\t...k,\n\t\t\t\tindex: i,\n\t\t\t};\n\t\t});\n\t\t\n\t\t// If we're deleting the active keyword, reset to the first one\n\t\tthis.activeKeywordIndex === i && this.setActiveKeyword(0);\n\t\t\n\t\tthis.onKeywordsChange();\n\t};\n\t\n\t// Events: Keywords Input\n\t// -------------------------------------------------------------------------\n\t\n\t/**\n\t * Fired when the keywords input wrapper is clicked\n\t *\n\t * @param {Event} e\n\t */\n\tonInputWrapClick = e => {\n\t\tif (e.target === this.inputWrap)\n\t\t\tthis.input.focus();\n\t};\n\t\n\t/**\n\t * Fired when the keywords input is focused\n\t */\n\tonInputFocus = () => {\n\t\tthis.inputWrap.classList.add('focused');\n\t};\n\t\n\t/**\n\t * Fired when the keywords input is blurred\n\t */\n\tonInputBlur = () => {\n\t\tthis.inputWrap.classList.remove('focused');\n\t};\n\t\n\t/**\n\t * Fired when a key is pressed while the keywords input is focused\n\t *\n\t * @param {Event} e\n\t */\n\tonInputKeyDown = e => {\n\t\tif (e.keyCode !== 13) return;\n\t\te.preventDefault();\n\t\t\n\t\tconst nextKeyword = e.target.value.trim();\n\t\tlet dupe = false;\n\t\t\n\t\tif (!nextKeyword) return;\n\t\t\n\t\t// Check if this is a duplicate and activate original if it is\n\t\tlet i = this.keywords.length;\n\t\twhile (i--) {\n\t\t\tlet { keyword, index } = this.keywords[i];\n\t\t\tif (nextKeyword.toLowerCase() === keyword.toLowerCase()) {\n\t\t\t\tdupe = true;\n\t\t\t\tthis.setActiveKeyword(index);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// If it's not a duplicate, create a new keyword\n\t\t!dupe && this.createKeyword(nextKeyword);\n\t\t\n\t\t// Reset the input\n\t\te.target.value = '';\n\t};\n\t\n\t// Helpers\n\t// =========================================================================\n\t\n\t/**\n\t * Creates a new keyword and adds it to the keyword input\n\t *\n\t * @param {string} keyword\n\t * @param {string=} rating\n\t * @param {number|null=} index\n\t */\n\tcreateKeyword = (keyword, rating = 'neutral', index = null) => {\n\t\t// Use the given index, or the next available one\n\t\tconst nextIndex = index !== null ? index : this.keywords.length;\n\t\t\n\t\t// Create the keyword token\n\t\tconst elem = c('a', {\n\t\t\thref: '#',\n\t\t\tclick: this.onKeywordClick,\n\t\t\t'data-index': String(nextIndex),\n\t\t}, [\n\t\t\tcreateRating(rating, 'span'),\n\t\t\tkeyword,\n\t\t\tc('object', {}, c('a', {\n\t\t\t\thref: '#',\n\t\t\t\ttitle: 'Remove',\n\t\t\t\tclick: this.onKeywordRemoveClick,\n\t\t\t}, 'Remove'))\n\t\t]);\n\t\t\n\t\t// Add the keyword token to the input\n\t\tthis.inputWrap.insertBefore(\n\t\t\telem,\n\t\t\tthis.inputWrap.lastElementChild\n\t\t);\n\t\t\n\t\t// If the given index is null (meaning a new keyword) store the keyword\n\t\tif (index === null) {\n\t\t\tthis.keywords.push({\n\t\t\t\tkeyword,\n\t\t\t\trating,\n\t\t\t\tindex: nextIndex,\n\t\t\t});\n\t\t\t\n\t\t\t// Make the new keyword active\n\t\t\tthis.setActiveKeyword(nextIndex);\n\t\t\t\n\t\t\t// Fire the keywords change callback\n\t\t\tthis.onKeywordsChange();\n\t\t}\n\t};\n\t\n\t/**\n\t * Gets a keyword element at a given index\n\t *\n\t * @param {number} index\n\t * @return {HTMLElement}\n\t */\n\tgetKeywordElementAtIndex = (index) => this.inputWrap.children[index];\n\t\n}\n","/* globals Craft */\n\n/**\n * Snippet\n *\n * @author    Tam McDonald\n * @copyright Ether Creative 2017\n * @link      https://ethercreative.co.uk\n * @package   SEO\n * @since     2.0.0\n */\n\nimport { debounce } from \"../helpers\";\n\nexport default class Snippet {\n\t\n\tconstructor (namespace, SEO) {\n\t\tthis.namespace = namespace;\n\t\tthis.SEO = SEO;\n\t\t\n\t\tthis.titleField = document.getElementById(`${namespace}Title`);\n\t\tthis.slugField  = document.getElementById(`${namespace}Slug`);\n\t\tthis.descField  = document.getElementById(`${namespace}Description`);\n\t\t\n\t\tthis.SEO.snippetFields = {\n\t\t\ttitle: this.titleField,\n\t\t\tslug:  this.slugField,\n\t\t\tdesc:  this.descField,\n\t\t};\n\t\t\n\t\tthis.title();\n\t\tthis.slugField && SEO.options.hasPreview && this.slug();\n\t\tthis.desc();\n\t}\n\t\n\t/**\n\t * Sync up the main title input with the SEO one\n\t * (if it's a new entry, or we don't have a title)\n\t *\n\t * TODO: Alert the user if they change the main title, but not the SEO one\n\t * TODO: If the SEO title matches the main title (sans suffix), keep syncing\n\t */\n\ttitle () {\n\t\tconst mainTitleField = document.getElementById(\"title\");\n\t\t\n\t\t// Check to see if we should be syncing the title\n\t\tif (\n\t\t\t(\n\t\t\t\t!mainTitleField\n\t\t\t\t|| !this.titleField.classList.contains(\"clean\")\n\t\t\t\t|| !this.SEO.options.isNew\n\t\t\t) && this.titleField.value.trim() !== \"\"\n\t\t) return;\n\t\t\n\t\t// This should be just the suffix (if there is one)\n\t\tconst initial = this.titleField.value;\n\t\t\n\t\t// On Craft title field input, sync the title\n\t\tconst onMainTitleFieldInput = () => {\n\t\t\tif (this.SEO.options.suffixAsPrefix) {\n\t\t\t\tthis.titleField.value = `${initial} ${mainTitleField.value}`;\n\t\t\t} else {\n\t\t\t\tthis.titleField.value = `${mainTitleField.value} ${initial}`;\n\t\t\t}\n\t\t};\n\t\t\n\t\t// On SEO title field input, stop syncing\n\t\tconst onTitleInput = () => {\n\t\t\tthis.titleField.classList.remove(\"clean\");\n\t\t\t\n\t\t\tmainTitleField.removeEventListener(\n\t\t\t\t\"input\",\n\t\t\t\tonMainTitleFieldInput,\n\t\t\t\tfalse\n\t\t\t);\n\t\t\t\n\t\t\tthis.titleField.removeEventListener(\"input\", onTitleInput, false);\n\t\t};\n\t\t\n\t\t// Add event listeners\n\t\tmainTitleField.addEventListener(\n\t\t\t\"input\",\n\t\t\tonMainTitleFieldInput,\n\t\t\tfalse\n\t\t);\n\t\t\n\t\tthis.titleField.addEventListener(\"input\", onTitleInput, false);\n\t\t\n\t\t// Trigger the Craft title field listener to sync, just in case we don't\n\t\t// have an SEO title but the entry has one and the user doesn't change\n\t\t// it (usually if the entry was created before the SEO field was added)\n\t\tonMainTitleFieldInput();\n\t}\n\t\n\t/**\n\t * Sync up the SEO slug with crafts\n\t */\n\tslug () {\n\t\tconst mainSlugField = document.getElementById(\"slug\");\n\t\t\n\t\t// Skip if we don't have a slug field (i.e. the homepage)\n\t\tif (!mainSlugField) return;\n\t\t\n\t\tconst onSlugChange = () => {\n\t\t\tthis.slugField.textContent = mainSlugField.value;\n\t\t};\n\t\t\n\t\tmainSlugField.addEventListener(\"input\", onSlugChange);\n\t\t\n\t\t// Slug generation has a debounce that we need to account for to keep\n\t\t// the slugs in sync\n\t\tconst title = document.getElementById(\"title\");\n\t\ttitle && title.addEventListener(\"input\", debounce(onSlugChange, 500));\n\t\t\n\t\t// Sync straight away (see above in title() as to why)\n\t\tonSlugChange();\n\t}\n\t\n\t/**\n\t * Adjust the height of the description TextArea to ensure it never scrolls,\n\t * and handle descriptions that are longer than the recommended length.\n\t */\n\tdesc () {\n\t\tconst adjustHeight = () => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.descField.style.height = \"\";\n\t\t\t\tthis.descField.style.height = this.descField.scrollHeight + \"px\";\n\t\t\t}, 1);\n\t\t};\n\t\t\n\t\t// Prevent line breaks\n\t\tthis.descField.addEventListener(\"keydown\", e => {\n\t\t\tif (e.keyCode === 13) e.preventDefault();\n\t\t});\n\t\t\n\t\t// Cleanse line breaks & check length\n\t\tthis.descField.addEventListener(\"input\", () => {\n\t\t\tthis.descField.value =\n\t\t\t\tthis.descField.value.replace(/(\\r\\n|\\r|\\n)/gm, \" \");\n\t\t\t\n\t\t\tif (this.descField.value.length > 313)\n\t\t\t\tthis.descField.classList.add(\"invalid\");\n\t\t\telse\n\t\t\t\tthis.descField.classList.remove(\"invalid\");\n\t\t\t\n\t\t\tadjustHeight();\n\t\t});\n\t\t\n\t\t// Adjust height TextArea size changes\n\t\t\n\t\t// On tab change\n\t\tif (document.getElementById(\"tabs\")) {\n\t\t\tconst tabs = document.querySelectorAll(\"#tabs a.tab\");\n\t\t\tfor (let i = 0; i < tabs.length; i++) {\n\t\t\t\ttabs[i].addEventListener(\"click\", adjustHeight);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// On open / close live preview\n\t\tif (Craft.livePreview) {\n\t\t\tCraft.livePreview.on(\"enter\", adjustHeight);\n\t\t\tCraft.livePreview.on(\"exit\", adjustHeight);\n\t\t}\n\t\t\n\t\t// On window resize\n\t\twindow.addEventListener(\"resize\", adjustHeight);\n\t\t\n\t\t// Set initial height (extra delay to fix FF bug)\n\t\tsetTimeout(() => {\n\t\t\tadjustHeight();\n\t\t}, 15);\n\t}\n\t\n}\n","/* globals Craft */\n\n/**\n * Snippet\n *\n * @author    Tam McDonald\n * @copyright Ether Creative 2017\n * @link      https://ethercreative.co.uk\n * @package   SEO\n * @since     2.0.0\n */\n\nexport default class Social {\n\t\n\tconstructor (namespace, SEO) {\n\t\tthis.namespace = namespace;\n\t\tthis.SEO = SEO;\n\t\t\n\t\tthis.initImages();\n\t\tthis.initDesc();\n\t}\n\t\n\t// Initializers\n\t// =========================================================================\n\t\n\tinitImages () {\n\t\tconst imageInputs = document.querySelectorAll(\n\t\t\t`a[data-seo-social-image='${this.namespace}']`\n\t\t);\n\t\t\n\t\tlet i = imageInputs.length;\n\t\twhile (i--) {\n\t\t\tconst imageInput = imageInputs[i];\n\t\t\timageInput.addEventListener(\n\t\t\t\t\"click\",\n\t\t\t\tthis.onImageInputClick.bind(this, imageInput)\n\t\t\t);\n\t\t\timageInput.querySelector(\".remove\").addEventListener(\n\t\t\t\t\"click\",\n\t\t\t\tthis.onImageRemoveClick.bind(this, imageInput)\n\t\t\t);\n\t\t}\n\t}\n\t\n\tinitDesc () {\n\t\tconst descInputs = document.querySelectorAll(\n\t\t\t`textarea[data-seo-social-desc='${this.namespace}']`\n\t\t);\n\t\t\n\t\tlet i = descInputs.length;\n\t\twhile (i--) {\n\t\t\tconst desc = descInputs[i];\n\t\t\tdesc.addEventListener(\"input\", () => {\n\t\t\t\t// Replace line-breaks with spaces\n\t\t\t\tdesc.value = desc.value.replace(/(\\r\\n|\\r|\\n)/gm, \" \");\n\t\t\t});\n\t\t\tdesc.addEventListener(\"keydown\", e => {\n\t\t\t\t// Prevent line-breaks\n\t\t\t\tif (e.keyCode === 13) e.preventDefault();\n\t\t\t});\n\t\t}\n\t}\n\t\n\t// Events\n\t// =========================================================================\n\t\n\tonImageInputClick = (self, e) => {\n\t\te.preventDefault();\n\t\t\n\t\tif (\n\t\t\tself.classList.contains(\"has-image\")\n\t\t\t|| e.target.classList.contains(\"remove\")\n\t\t) return;\n\t\t\n\t\tCraft.createElementSelectorModal(\n\t\t\t\"craft\\\\elements\\\\Asset\",\n\t\t\t{\n\t\t\t\tmultiSelect: false,\n\t\t\t\tcriteria: {\n\t\t\t\t\tkind: ['image'],\n\t\t\t\t},\n\t\t\t\tonSelect: elements => {\n\t\t\t\t\tconst image = elements[0];\n\t\t\t\t\tself.classList.add(\"has-image\");\n\t\t\t\t\tself.style.backgroundImage = `url(${image.url})`;\n\t\t\t\t\tself.firstElementChild.value = image.id;\n\t\t\t\t},\n\t\t\t}\n\t\t);\n\t};\n\t\n\tonImageRemoveClick = self => {\n\t\tif (!self.classList.contains(\"has-image\")) return;\n\t\t\n\t\tself.classList.remove(\"has-image\");\n\t\tself.style.backgroundImage = \"\";\n\t\tself.firstElementChild.value = \"\";\n\t};\n\t\n}\n","/**\n * SEO for Craft CMS\n *\n * @author    Tam McDonald\n * @copyright Ether Creative 2017\n * @link      https://ethercreative.co.uk\n * @package   SEO\n * @since     2.0.0\n */\n\nimport Tabs from \"./field/Tabs\";\nimport FocusKeywords from \"./field/FocusKeywords\";\nimport Snippet from \"./field/Snippet\";\nimport Social from \"./field/Social\";\n\nclass SeoField {\n\t\n\t// Variables\n\t// =========================================================================\n\t\n\t// Set in Snippet\n\tsnippetFields = {\n\t\ttitle: null,\n\t\tslug:  null,\n\t\tdesc:  null,\n\t};\n\t\n\t// Overwritten, but useful for auto-complete\n\toptions = {\n\t\thasPreview: false,\n\t\tisNew: false,\n\t};\n\t\n\t// SeoField\n\t// =========================================================================\n\t\n\t/**\n\t * Initialize the SEO field\n\t *\n\t * @param {string} namespace - Field namespace\n\t * @param {object} options - The options for the SEO field\n\t * @constructor\n\t */\n\tconstructor (namespace, options) {\n\t\tthis.options = options;\n\t\t\n\t\tnew Tabs(namespace);\n\t\tnew Snippet(namespace, this);\n\t\tnew Social(namespace, this);\n\t\t\n\t\tif (!this.options.hasPreview) return;\n\t\t// TODO: Disable all preview related functionality\n\t\t\n\t\tnew FocusKeywords(namespace, this);\n\t}\n\t\n}\n\nwindow.SeoField = SeoField;\n"],"names":["Tabs","namespace","activeTab","tab","page","pages","tabs","slice","call","document","getElementById","this","getElementsByTagName","children","reduce","a","b","dataset","seoTab","setActiveTab","forEach","addEventListener","preventDefault","name","classList","remove","add","createElement","tag","attributes","elem","Object","entries","key","value","replace","trim","setAttribute","Array","isArray","map","child","appendChild","_","createTextNode","TextStatistics","text","cleanText","Math","round","averageWordsPerSentence","averageSyllablesPerWord","percentageWordsWithThreeSyllables","letterCount","wordCount","sentenceCount","sqrt","wordsWithThreeSyllables","length","words","_words","split","syllableCount","word","countProperNouns","longWordCount","match","_this","prefixSuffixCount","toLowerCase","problemWords","hasOwnProperty","regex","wordPartCount","filter","wordPart","syllable","fail","message","cp","displayError","console","error","apply","debounce","func","wait","immediate","timeout","arguments","context","args","constructor","persist","callNow","setTimeout","capitalize","s","toUpperCase","isExternalUrl","url","domain","res","exec","location","href","countInArray","arr","c","i","l","w","x","createRating","level","t","EntryMarkup","frame","postData","clean","Promise","resolve","reject","nextPostData","Garnish","getPostData","Craft","compare","contentWindow","body","ajax","livePreview","previewUrl","$","extend","basePostData","withCredentials","data","open","write","close","removeChild","SEO_RATING","SEO_RATING_LABEL","SEO_REASONS","KeywordChecklist","SEO","keyword","keywordLower","ratings","ratingOccurrence","content","stats","renderChecklistItem","rating","reason","bar","checklist","onNewRating","update","then","textContent","addRating","POOR","noContent","renderChecklist","getOwnPropertyNames","prototype","f","indexOf","sort","ratingValue","overallRating","keys","catch","err","onEmptyRating","style","transform","firstElementChild","empty","textAlign","ratingCount","currentFillSize","fill","className","_this2","snippetFields","title","GOOD","titleLengthFailMin","titleLengthFailMax","titleLengthSuccess","index","titleKeywordSuccess","AVERAGE","titleKeywordPosFail","titleKeywordFail","slug","slugSuccess","slugFail","desc","descSuccess","descFail","count","wordCountSuccess","wordCountFail","p","querySelector","firstParagraphSuccess","firstParagraphFail","imgs","withKeywordAlt","alt","getAttribute","imagesSuccess","imagesOk","imagesFail","linksSuccess","linksFail","headings","querySelectorAll","primary","secondary","h","nodeName","headingsSuccess","headingsOk","headingsFail","keyCount","reduceWordCount","wordsLength","keyPercent","toFixed","densityFailUnder","densitySuccess","densityOk","densityFail","fleschKincaidReadingEase","fleschSuccess","fleschOk","fleschFail","push","FocusKeywords","activeKeywordIndex","recalculateKeyword","stopObserving","keywords","keywordsChecklist","calculate","bind","startObserving","onKeywordsChange","keywordsField","JSON","stringify","scoreField","keywordIndex","getKeywordElementAtIndex","insertBefore","firstChild","keywordElem","ratingElem","innerHTML","onKeywordClick","setActiveKeyword","e","target","onKeywordRemoveClick","stopPropagation","parentNode","splice","k","onInputWrapClick","inputWrap","input","focus","onInputFocus","onInputBlur","onInputKeyDown","keyCode","nextKeyword","dupe","createKeyword","nextIndex","String","lastElementChild","initInput","initKeywords","initWatcher","parse","mo","MutationObserver","form","$editor","observe","disconnect","takeRecords","clear","Snippet","titleField","slugField","descField","options","hasPreview","mainTitleField","contains","isNew","initial","onMainTitleFieldInput","suffixAsPrefix","onTitleInput","removeEventListener","mainSlugField","onSlugChange","adjustHeight","height","_this3","scrollHeight","on","Social","onImageInputClick","self","createElementSelectorModal","image","elements","backgroundImage","id","onImageRemoveClick","initImages","initDesc","imageInputs","imageInput","descInputs","SeoField","window"],"mappings":"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"}